import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {
    public static void miniMaxSum(List<Integer> arr) {
        long sum = 0;
        for(int num:arr)
        {
            sum = sum+num;
        }
        Long maxsum=Long.MIN_VALUE,minsum=Long.MAX_VALUE;
        for(int num:arr)
        {
            long currsum=sum-num;
            if(currsum<minsum){
                minsum=currsum;
            }
            if(currsum>maxsum){
                maxsum=currsum;
            }
            
        }
        System.out.println(minsum+" "+maxsum);
    
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        Result.miniMaxSum(arr);

        bufferedReader.close();
    }
}
