class Solution {
    public List<List<Integer>> permute(int[] nums) {
         List<List<Integer>> results = new ArrayList<>();
        heapPermutation(nums, nums.length, results);
        return results;
    }

    private static void heapPermutation(int[] nums, int size, List<List<Integer>> results) {
        if(size==1)
        {
            List<Integer> per=new ArrayList<>();
            for(int num:nums)
            {
                per.add(num);
            }
            results.add(per);
            return;
        }
        for(int i=0;i<size;i++)
        {
            heapPermutation(nums,size-1,results);
            if(size%2==1)
            {
                int temp=nums[0];
                nums[0]=nums[size-1];
                nums[size-1]=temp;
            }
            else
            {
                int temp=nums[i];
                nums[i]=nums[size-1];
                nums[size-1]=temp;
            }
        }
    }
        
    }
